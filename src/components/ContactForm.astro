---
interface Props {
  className?: string;
}

const { className = "" } = Astro.props;
---

<form 
  id="contactForm"
  class={`space-y-6 ${className}`} 
>
  <div class="grid md:grid-cols-2 gap-6">
    <div>
      <label for="firstName" class="block text-sm font-medium text-gray-700 mb-1">
        First Name
      </label>
      <input
        type="text"
        id="firstName"
        name="firstName"
        required
        class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-lexpressed-blue focus:border-transparent"
      />
    </div>
    <div>
      <label for="lastName" class="block text-sm font-medium text-gray-700 mb-1">
        Last Name
      </label>
      <input
        type="text"
        id="lastName"
        name="lastName"
        required
        class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-lexpressed-blue focus:border-transparent"
      />
    </div>
  </div>

  <div>
    <label for="email" class="block text-sm font-medium text-gray-700 mb-1">
      Email Address
    </label>
    <input
      type="email"
      id="email"
      name="email"
      required
      class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-lexpressed-blue focus:border-transparent"
    />
  </div>

  <div>
    <label for="organization" class="block text-sm font-medium text-gray-700 mb-1">
      Organization
    </label>
    <input
      type="text"
      id="organization"
      name="organization"
      class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-lexpressed-blue focus:border-transparent"
    />
  </div>

  <div>
    <label for="inquiryType" class="block text-sm font-medium text-gray-700 mb-1">
      Type of Inquiry
    </label>
    <select
      id="inquiryType"
      name="inquiryType"
      required
      class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-lexpressed-blue focus:border-transparent"
    >
      <option value="">Please select...</option>
      <option value="general">General Inquiry</option>
      <option value="collaboration">Project Collaboration</option>
      <option value="research">Research Opportunity</option>
      <option value="other">Other</option>
    </select>
  </div>

  <div>
    <label for="message" class="block text-sm font-medium text-gray-700 mb-1">
      Message
    </label>
    <textarea
      id="message"
      name="message"
      rows="6"
      required
      class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-lexpressed-blue focus:border-transparent"
    ></textarea>
  </div>

  <div class="flex items-center">
    <input
      type="checkbox"
      id="consent"
      name="consent"
      required
      class="h-4 w-4 text-lexpressed-blue focus:ring-lexpressed-blue border-gray-300 rounded"
    />
    <label for="consent" class="ml-2 block text-sm text-gray-600">
      I consent to Lexpressed storing my contact information for future communication.
    </label>
  </div>

  <div>
    <button
      type="submit"
      id="submitButton"
      class="w-full md:w-auto px-8 py-3 bg-lexpressed-blue text-white rounded-lg hover:bg-opacity-90 transition-colors duration-300"
    >
      Send Message
    </button>
    <p id="formStatus" class="mt-2 text-sm"></p>
  </div>
</form>

<script>
  import emailjs from '@emailjs/browser';

  // Initialize EmailJS with your public key
  emailjs.init("z7MwsPRrBq0Ql461w");

  const form = document.getElementById('contactForm');
  const submitButton = document.getElementById('submitButton');
  const formStatus = document.getElementById('formStatus');

  if (form && submitButton && formStatus) {
    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      try {
        submitButton.disabled = true;
        submitButton.textContent = 'Sending...';
        formStatus.textContent = '';
        formStatus.className = 'mt-2 text-sm';

        const formData = {
          from_name: `${(document.getElementById('firstName') as HTMLInputElement).value} ${(document.getElementById('lastName') as HTMLInputElement).value}`,
          reply_to: (document.getElementById('email') as HTMLInputElement).value,
          
          organization: (document.getElementById('organization') as HTMLInputElement).value,
          inquiry_type: (document.getElementById('inquiryType') as HTMLSelectElement).value,
          message: (document.getElementById('message') as HTMLTextAreaElement).value,
        };

        await emailjs.send(
          'service_t7by7zn',
          'template_ggwj4xi',
          formData
        );

        formStatus.textContent = 'Message sent successfully!';
        formStatus.className = 'mt-2 text-sm text-green-600';
        form.reset();
      } catch (error) {
        console.error('Error:', error);
        formStatus.textContent = 'Failed to send message. Please try again.';
        formStatus.className = 'mt-2 text-sm text-red-600';
      } finally {
        submitButton.disabled = false;
        submitButton.textContent = 'Send Message';
      }
    });
  }
</script>